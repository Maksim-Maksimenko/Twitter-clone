{"ast":null,"code":"import _objectSpread from \"/Users/maksim/Desktop/twitter-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/Users/maksim/Desktop/twitter-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/maksim/Desktop/twitter-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/maksim/Desktop/twitter-clone/src/components/Content/Content.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Profile } from \"./Profile/Profile\";\nimport { Bookmarks } from \"./Bookmarks/Bookmarks\";\nexport var Content = function Content() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      postNews = _useState2[0],\n      SetPostNews = _useState2[1];\n\n  useEffect(function () {\n    var saved = JSON.parse(localStorage.getItem(\"post\") || \"[]\");\n    SetPostNews(saved);\n  }, []);\n  useEffect(function () {\n    localStorage.setItem(\"post\", JSON.stringify(postNews));\n  }, [postNews]);\n  var addPost = useCallback(function (value) {\n    var newPost = {\n      value: value,\n      isFlagLike: false,\n      id: Date.now()\n    };\n    SetPostNews(function (prev) {\n      return [newPost].concat(_toConsumableArray(prev));\n    });\n  }, []);\n  var toggle = useCallback(function (id) {\n    SetPostNews(function (prev) {\n      return prev.map(function (post) {\n        return _objectSpread(_objectSpread({}, post), {}, {\n          isFlagLike: post.id === id ? !post.isFlagLike : post.isFlagLike\n        });\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      component: function component() {\n        return /*#__PURE__*/_jsxDEV(Profile, {\n          postNews: postNews,\n          toggle: toggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 40\n        }, _this);\n      },\n      exact: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/Profile\",\n      component: function component() {\n        return /*#__PURE__*/_jsxDEV(Profile, {\n          postNews: postNews,\n          toggle: toggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 26\n        }, _this);\n      },\n      exact: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/Bookmarks\",\n      component: function component() {\n        return /*#__PURE__*/_jsxDEV(Bookmarks, {\n          postNews: postNews,\n          toggle: toggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 26\n        }, _this);\n      },\n      exact: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Content, \"YV9DqMz3iQ4kxg1FWFLVUZ/owro=\");\n\n_c = Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["/Users/maksim/Desktop/twitter-clone/src/components/Content/Content.tsx"],"names":["React","useState","useCallback","useEffect","Route","Switch","Profile","Bookmarks","Content","postNews","SetPostNews","saved","JSON","parse","localStorage","getItem","setItem","stringify","addPost","value","newPost","isFlagLike","id","Date","now","prev","toggle","map","post"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,EAA8BC,WAA9B,EAA2CC,SAA3C,QAA4D,OAA5D;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,SAAT,QAA0B,uBAA1B;AAQA,OAAO,IAAMC,OAAW,GAAG,SAAdA,OAAc,GAAM;AAAA;;AAAA,kBACCP,QAAQ,CAAc,EAAd,CADT;AAAA;AAAA,MACxBQ,QADwB;AAAA,MACdC,WADc;;AAG/BP,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMQ,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,KAAgC,IAA3C,CAAd;AACAL,IAAAA,WAAW,CAACC,KAAD,CAAX;AACD,GAHQ,EAGN,EAHM,CAAT;AAKAR,EAAAA,SAAS,CAAC,YAAM;AACdW,IAAAA,YAAY,CAACE,OAAb,CAAqB,MAArB,EAA6BJ,IAAI,CAACK,SAAL,CAAeR,QAAf,CAA7B;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIA,MAAMS,OAAO,GAAGhB,WAAW,CAAC,UAACiB,KAAD,EAAmB;AAC7C,QAAMC,OAAkB,GAAG;AACzBD,MAAAA,KAAK,EAAEA,KADkB;AAEzBE,MAAAA,UAAU,EAAE,KAFa;AAGzBC,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL;AAHqB,KAA3B;AAMAd,IAAAA,WAAW,CAAC,UAACe,IAAD;AAAA,cAAWL,OAAX,4BAAuBK,IAAvB;AAAA,KAAD,CAAX;AACD,GAR0B,EAQxB,EARwB,CAA3B;AAUA,MAAMC,MAAM,GAAGxB,WAAW,CAAC,UAACoB,EAAD,EAAgB;AACzCZ,IAAAA,WAAW,CAAC,UAACe,IAAD;AAAA,aACVA,IAAI,CAACE,GAAL,CAAS,UAACC,IAAD,EAAU;AACjB,+CAAYA,IAAZ;AAAkBP,UAAAA,UAAU,EAAEO,IAAI,CAACN,EAAL,KAAYA,EAAZ,GAAiB,CAACM,IAAI,CAACP,UAAvB,GAAoCO,IAAI,CAACP;AAAvE;AACD,OAFD,CADU;AAAA,KAAD,CAAX;AAKD,GANyB,EAMvB,EANuB,CAA1B;AAQA,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,SAAS,EAAE;AAAA,4BAAM,QAAC,OAAD;AAAS,UAAA,QAAQ,EAAEZ,QAAnB;AAA6B,UAAA,MAAM,EAAEiB;AAArC;AAAA;AAAA;AAAA;AAAA,iBAAN;AAAA,OAA3B;AAAkF,MAAA,KAAK;AAAvF;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,KAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,SAAS,EAAE;AAAA,4BAAM,QAAC,OAAD;AAAS,UAAA,QAAQ,EAAEjB,QAAnB;AAA6B,UAAA,MAAM,EAAEiB;AAArC;AAAA;AAAA;AAAA;AAAA,iBAAN;AAAA,OAFb;AAGE,MAAA,KAAK;AAHP;AAAA;AAAA;AAAA;AAAA,aAFF,eAOE,QAAC,KAAD;AACE,MAAA,IAAI,EAAC,YADP;AAEE,MAAA,SAAS,EAAE;AAAA,4BAAM,QAAC,SAAD;AAAW,UAAA,QAAQ,EAAEjB,QAArB;AAA+B,UAAA,MAAM,EAAEiB;AAAvC;AAAA;AAAA;AAAA;AAAA,iBAAN;AAAA,OAFb;AAGE,MAAA,KAAK;AAHP;AAAA;AAAA;AAAA;AAAA,aAPF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAeD,CA7CM;;GAAMlB,O;;KAAAA,O","sourcesContent":["import React, { FC, useState, useCallback, useEffect } from \"react\"\nimport { Route, Switch } from \"react-router-dom\"\nimport { Profile } from \"./Profile/Profile\"\nimport { Bookmarks } from \"./Bookmarks/Bookmarks\"\n\nexport type postProps = {\n  value: string\n  id: number\n  isFlagLike: boolean\n}\n\nexport const Content: FC = () => {\n  const [postNews, SetPostNews] = useState<postProps[]>([])\n\n  useEffect(() => {\n    const saved = JSON.parse(localStorage.getItem(\"post\") || \"[]\") as postProps[]\n    SetPostNews(saved)\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(\"post\", JSON.stringify(postNews))\n  }, [postNews])\n\n  const addPost = useCallback((value: string) => {\n    const newPost: postProps = {\n      value: value,\n      isFlagLike: false,\n      id: Date.now()\n    }\n\n    SetPostNews((prev) => [newPost, ...prev])\n  }, [])\n\n  const toggle = useCallback((id: number) => {\n    SetPostNews((prev) =>\n      prev.map((post) => {\n        return { ...post, isFlagLike: post.id === id ? !post.isFlagLike : post.isFlagLike }\n      })\n    )\n  }, [])\n\n  return (\n    <Switch>\n      <Route path=\"/\" component={() => <Profile postNews={postNews} toggle={toggle} />} exact />\n      <Route\n        path=\"/Profile\"\n        component={() => <Profile postNews={postNews} toggle={toggle} />}\n        exact\n      />\n      <Route\n        path=\"/Bookmarks\"\n        component={() => <Bookmarks postNews={postNews} toggle={toggle} />}\n        exact\n      />\n    </Switch>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}