{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/maksim/Desktop/twitter-clone/src/App.tsx\",\n    _this = this;\n\nimport React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Nav } from \"./components/Nav/Nav\";\nimport { Sidebar } from \"./components/Sidebar/Sidebar\"; // import { Bookmarks } from \"./components/Content/Profile/components/ProfileInfo/Bookmarks/Bookmarks\"\n\nimport { Content } from \"./components/Content/Content\";\nimport styles from \"./App.module.css\";\nexport var App = /*#__PURE__*/React.memo(_c = function _c() {\n  // const [postNews, SetPostNews] = useState<postProps[]>([])\n  // useEffect(() => {\n  //   const saved = JSON.parse(localStorage.getItem(\"post\") || \"[]\") as postProps[]\n  //   SetPostNews(saved)\n  // }, [])\n  // useEffect(() => {\n  //   localStorage.setItem(\"post\", JSON.stringify(postNews))\n  // }, [postNews])\n  // const addPost = useCallback((value: string) => {\n  //   const newPost: postProps = {\n  //     value: value,\n  //     isFlagLike: false,\n  //     id: Date.now()\n  //   }\n  //   SetPostNews((prev) => [newPost, ...prev])\n  // }, [])\n  // const toggle = useCallback((id: number) => {\n  //   SetPostNews((prev) =>\n  //     prev.map((post) => {\n  //       return { ...post, isFlagLike: post.id === id ? !post.isFlagLike : post.isFlagLike }\n  //     })\n  //   )\n  // }, [])\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.main,\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: styles.list,\n        children: /*#__PURE__*/_jsxDEV(Content, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, _this);\n});\n_c2 = App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App$React.memo\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/maksim/Desktop/twitter-clone/src/App.tsx"],"names":["React","BrowserRouter","Nav","Sidebar","Content","styles","App","memo","main","list"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAA4D,OAA5D;AACA,SAASC,aAAT,QAA6C,kBAA7C;AACA,SAASC,GAAT,QAAoB,sBAApB;AAEA,SAASC,OAAT,QAAwB,8BAAxB,C,CACA;;AAEA,SAASC,OAAT,QAAwB,8BAAxB;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AAQA,OAAO,IAAMC,GAAO,gBAAGN,KAAK,CAACO,IAAN,MAAW,cAAM;AACtC;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,sBACE,QAAC,aAAD;AAAA,2BACE;AAAM,MAAA,SAAS,EAAEF,MAAM,CAACG,IAAxB;AAAA,8BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAS,QAAA,SAAS,EAAEH,MAAM,CAACI,IAA3B;AAAA,+BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eAFF,eAoBE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,eApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AA0BD,CAxDsB,CAAhB;MAAMH,G","sourcesContent":["import React, { FC, useState, useCallback, useEffect } from \"react\"\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\nimport { Nav } from \"./components/Nav/Nav\"\n\nimport { Sidebar } from \"./components/Sidebar/Sidebar\"\n// import { Bookmarks } from \"./components/Content/Profile/components/ProfileInfo/Bookmarks/Bookmarks\"\n\nimport { Content } from \"./components/Content/Content\"\n\nimport styles from \"./App.module.css\"\n\nexport type postProps = {\n  value: string\n  id: number\n  isFlagLike: boolean\n}\n\nexport const App: FC = React.memo(() => {\n  // const [postNews, SetPostNews] = useState<postProps[]>([])\n\n  // useEffect(() => {\n  //   const saved = JSON.parse(localStorage.getItem(\"post\") || \"[]\") as postProps[]\n  //   SetPostNews(saved)\n  // }, [])\n\n  // useEffect(() => {\n  //   localStorage.setItem(\"post\", JSON.stringify(postNews))\n  // }, [postNews])\n\n  // const addPost = useCallback((value: string) => {\n  //   const newPost: postProps = {\n  //     value: value,\n  //     isFlagLike: false,\n  //     id: Date.now()\n  //   }\n\n  //   SetPostNews((prev) => [newPost, ...prev])\n  // }, [])\n\n  // const toggle = useCallback((id: number) => {\n  //   SetPostNews((prev) =>\n  //     prev.map((post) => {\n  //       return { ...post, isFlagLike: post.id === id ? !post.isFlagLike : post.isFlagLike }\n  //     })\n  //   )\n  // }, [])\n\n  return (\n    <BrowserRouter>\n      <main className={styles.main}>\n        <Nav />\n        <section className={styles.list}>\n          <Content />\n          {/* <Switch>\n            <Route\n              component={() => <Content toggle={toggle} postNews={postNews} />}\n              path=\"/\"\n              exact\n            />\n            <Route\n              component={() => <Content toggle={toggle} postNews={postNews} />}\n              path=\"/Profile\"\n            />\n            <Route\n              component={() => <Bookmarks postNews={postNews} toggle={toggle} />}\n              path=\"/Bookmarks\"\n            />\n          </Switch> */}\n        </section>\n        <Sidebar />\n      </main>\n    </BrowserRouter>\n  )\n})\n"]},"metadata":{},"sourceType":"module"}