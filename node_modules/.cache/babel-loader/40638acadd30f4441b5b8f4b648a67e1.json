{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/maksim/Desktop/twitter-clone/src/components/Sidebar/components/inputSearch/InputSearch.tsx\";\nimport React from 'react';\nimport styles from './input.module.css';\nexport const InputSearch = () => {\n  // const ref = useRef<HTMLInputElement>(null)\n  const KeyPressHandler = e => {\n    //useCallback\n    if (e.key === 'Enter') {\n      // KeyPressHandlerSpy(ref.current!.value) // вопросики \n      console.log(ref.current.value);\n      ref.current.value = '';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search Twitter\",\n      className: styles.inputSearch,\n      ref: ref,\n      onKeyPress: KeyPressHandler,\n      \"data-testid\": \"input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = InputSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputSearch\");","map":{"version":3,"sources":["/Users/maksim/Desktop/twitter-clone/src/components/Sidebar/components/inputSearch/InputSearch.tsx"],"names":["React","styles","InputSearch","KeyPressHandler","e","key","console","log","ref","current","value","inputSearch"],"mappings":";;;AAAA,OAAOA,KAAP,MAAoC,OAApC;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AAEA,OAAO,MAAMC,WAAe,GAAG,MAAM;AACpC;AAEA,QAAMC,eAAe,GAAIC,CAAD,IAA4B;AAAE;AACrD,QAAGA,CAAC,CAACC,GAAF,KAAU,OAAb,EAAsB;AAClB;AACHC,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAG,CAACC,OAAJ,CAAaC,KAAzB;AACAF,MAAAA,GAAG,CAACC,OAAJ,CAAaC,KAAb,GAAqB,EAArB;AACE;AACF,GANF;;AAQC,sBACE;AAAA,2BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,gBAFd;AAGE,MAAA,SAAS,EAAET,MAAM,CAACU,WAHpB;AAIE,MAAA,GAAG,EAAEH,GAJP;AAKE,MAAA,UAAU,EAAEL,eALd;AAME,qBAAY;AANd;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAYD,CAvBM;KAAMD,W","sourcesContent":["import React, { useState, FC } from 'react'\n\nimport styles from './input.module.css'\n\nexport const InputSearch: FC = () => {\n\t// const ref = useRef<HTMLInputElement>(null)\n\t\n\tconst KeyPressHandler = (e: React.KeyboardEvent) => { //useCallback\n\t\tif(e.key === 'Enter') {\n      // KeyPressHandlerSpy(ref.current!.value) // вопросики \n\t\t\tconsole.log(ref.current!.value)\n\t\t\tref.current!.value = ''\n    }\n  }\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        placeholder=\"Search Twitter\"\n        className={styles.inputSearch}\n        ref={ref}\n        onKeyPress={KeyPressHandler}\n        data-testid=\"input\"\n      />\n    </>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}