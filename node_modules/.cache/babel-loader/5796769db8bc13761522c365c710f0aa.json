{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/maksim/Desktop/twitter-clone/src/components/Content/Content.tsx\",\n    _this = this;\n\nimport React from \"react\";\nimport { Profile } from \"./Profile/Profile\";\nexport var Content = /*#__PURE__*/React.memo(_c = function _c() {\n  // const [postNews, SetPostNews] = useState<postProps[]>([])\n  // useEffect(() => {\n  //   const saved = JSON.parse(localStorage.getItem(\"post\") || \"[]\") as postProps[]\n  //   SetPostNews(saved)\n  // }, [])\n  // useEffect(() => {\n  //   localStorage.setItem(\"post\", JSON.stringify(postNews))\n  // }, [postNews])\n  // const addPost = useCallback((value: string) => {\n  //   const newPost: postProps = {\n  //     value: value,\n  //     isFlagLike: false,\n  //     id: Date.now()\n  //   }\n  //   SetPostNews((prev) => [newPost, ...prev])\n  // }, [])\n  // const toggle = useCallback((id: number) => {\n  //   SetPostNews((prev) =>\n  //     prev.map((post) => {\n  //       return { ...post, isFlagLike: post.id === id ? !post.isFlagLike : post.isFlagLike }\n  //     })\n  //   )\n  // }, [])\n  return /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, _this);\n});\n_c2 = Content;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Content$React.memo\");\n$RefreshReg$(_c2, \"Content\");","map":{"version":3,"sources":["/Users/maksim/Desktop/twitter-clone/src/components/Content/Content.tsx"],"names":["React","Profile","Content","memo"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AAEA,OAAO,IAAMC,OAAW,gBAAGF,KAAK,CAACG,IAAN,MAAW,cAAM;AAC1C;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,sBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CA/B0B,CAApB;MAAMD,O","sourcesContent":["import React, { FC } from \"react\"\nimport { Profile } from \"./Profile/Profile\"\n\nexport const Content: FC = React.memo(() => {\n  // const [postNews, SetPostNews] = useState<postProps[]>([])\n\n  // useEffect(() => {\n  //   const saved = JSON.parse(localStorage.getItem(\"post\") || \"[]\") as postProps[]\n  //   SetPostNews(saved)\n  // }, [])\n\n  // useEffect(() => {\n  //   localStorage.setItem(\"post\", JSON.stringify(postNews))\n  // }, [postNews])\n\n  // const addPost = useCallback((value: string) => {\n  //   const newPost: postProps = {\n  //     value: value,\n  //     isFlagLike: false,\n  //     id: Date.now()\n  //   }\n\n  //   SetPostNews((prev) => [newPost, ...prev])\n  // }, [])\n\n  // const toggle = useCallback((id: number) => {\n  //   SetPostNews((prev) =>\n  //     prev.map((post) => {\n  //       return { ...post, isFlagLike: post.id === id ? !post.isFlagLike : post.isFlagLike }\n  //     })\n  //   )\n  // }, [])\n\n  return <Profile />\n})\n"]},"metadata":{},"sourceType":"module"}