{"ast":null,"code":"import _slicedToArray from \"/Users/maksim/Desktop/twitter-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/maksim/Desktop/twitter-clone/src/components/Nav/components/button/Button.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { Suspense, lazy, useState } from 'react';\nimport styles from './button.module.css';\nvar PopupTweet = /*#__PURE__*/lazy(_c = function _c() {\n  return import('../../../PopupTweet/PopupTweet');\n});\n_c2 = PopupTweet;\nexport var Button = /*#__PURE__*/React.memo(_c3 = _s(function (_ref) {\n  _s();\n\n  var SetPostNews = _ref.SetPostNews;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      buttonLink = _useState2[0],\n      setButtonLink = _useState2[1];\n\n  var onClick = function onClick() {\n    setButtonLink(function (prev) {\n      return !prev;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.btnFont,\n      \"data-testid\": \"testBtn\",\n      onClick: onClick,\n      children: \"Tweet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 27\n      }, _this),\n      children: /*#__PURE__*/_jsxDEV(PopupTweet, {\n        SetPostNews: SetPostNews\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n}, \"QedHughj76HoDsLl95B7uyXyLqQ=\"));\n_c4 = Button;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"PopupTweet$lazy\");\n$RefreshReg$(_c2, \"PopupTweet\");\n$RefreshReg$(_c3, \"Button$React.memo\");\n$RefreshReg$(_c4, \"Button\");","map":{"version":3,"sources":["/Users/maksim/Desktop/twitter-clone/src/components/Nav/components/button/Button.tsx"],"names":["React","Suspense","lazy","useState","styles","PopupTweet","Button","memo","SetPostNews","buttonLink","setButtonLink","onClick","prev","btnFont"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,EAA8BC,IAA9B,EAAoCC,QAApC,QAAoD,OAApD;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAGA,IAAMC,UAAU,gBAAGH,IAAI,MAAC;AAAA,SAAM,OAAO,gCAAP,CAAN;AAAA,CAAD,CAAvB;MAAMG,U;AAMN,OAAO,IAAMC,MAAiB,gBAAGN,KAAK,CAACO,IAAN,UAAW,gBAAqB;AAAA;;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;;AAAA,kBAC3BL,QAAQ,CAAC,IAAD,CADmB;AAAA;AAAA,MACxDM,UADwD;AAAA,MAC5CC,aAD4C;;AAG/D,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpBD,IAAAA,aAAa,CAAC,UAACE,IAAD;AAAA,aAAU,CAACA,IAAX;AAAA,KAAD,CAAb;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAER,MAAM,CAACS,OAA1B;AAAmC,qBAAY,SAA/C;AAAyD,MAAA,OAAO,EAAEF,OAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAIE,QAAC,QAAD;AAAU,MAAA,QAAQ,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAApB;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,WAAW,EAAEH;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAJF;AAAA,kBADF;AAUD,CAjBgC,kCAA1B;MAAMF,M","sourcesContent":["import React, { FC, Suspense, lazy, useState } from 'react'\nimport styles from './button.module.css'\nimport { Link, Route } from 'react-router-dom'\n\nconst PopupTweet = lazy(() => import('../../../PopupTweet/PopupTweet'))\n\ntype props = {\n  SetPostNews: any\n}\n\nexport const Button: FC<props> = React.memo(({ SetPostNews }) => {\n  const [buttonLink, setButtonLink] = useState(true)\n\n  const onClick = () => {\n    setButtonLink((prev) => !prev)\n  }\n\n  return (\n    <>\n      <button className={styles.btnFont} data-testid=\"testBtn\" onClick={onClick}>\n        Tweet\n      </button>\n      <Suspense fallback={<div>Loading...</div>}>\n        <PopupTweet SetPostNews={SetPostNews} />\n      </Suspense>\n    </>\n  )\n})\n"]},"metadata":{},"sourceType":"module"}