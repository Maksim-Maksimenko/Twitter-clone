{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/maksim/Desktop/twitter-clone/src/components/Nav/Button.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styles from './nav.module.css';\n\nconst Button = props => {\n  _s();\n\n  const [buttonLog, setButtonLog] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: styles.button__tweet,\n      \"data-testid\": \"toggle\",\n      onClick: () => {\n        setButtonLog(previousState => !previousState); // props.onChange(!buttonLog)\n      },\n      children: buttonLog === true ? 'Tweet on' : 'Tweet off'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Button, \"9P1kfS38QL9RG16j8a/T+1tcE7o=\");\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/maksim/Desktop/twitter-clone/src/components/Nav/Button.tsx"],"names":["React","useState","styles","Button","props","buttonLog","setButtonLog","button__tweet","previousState"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAMA,MAAMC,MAAuB,GAAIC,KAAD,IAAW;AAAA;;AACzC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AAEA,sBACE;AAAA,2BACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAEC,MAAM,CAACK,aAFpB;AAGE,qBAAY,QAHd;AAIE,MAAA,OAAO,EAAE,MAAM;AACbD,QAAAA,YAAY,CAAEE,aAAD,IAAmB,CAACA,aAArB,CAAZ,CADa,CAEb;AACD,OAPH;AAAA,gBAUGH,SAAS,KAAK,IAAd,GAAqB,UAArB,GAAkC;AAVrC;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAgBD,CAnBD;;GAAMF,M;;KAAAA,M;AAqBN,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react'\nimport styles from './nav.module.css'\n\nexport type Props = {\n  onChange: any\n}\n\nconst Button: React.FC<Props> = (props) => {\n  const [buttonLog, setButtonLog] = useState(false)\n\n  return (\n    <>\n      <button\n        type=\"submit\"\n        className={styles.button__tweet}\n        data-testid=\"toggle\"\n        onClick={() => {\n          setButtonLog((previousState) => !previousState)\n          // props.onChange(!buttonLog)\n        }}\n      >\n        {/* Tweet */}\n        {buttonLog === true ? 'Tweet on' : 'Tweet off'}\n      </button>\n    </>\n  )\n}\n\nexport default Button\n"]},"metadata":{},"sourceType":"module"}