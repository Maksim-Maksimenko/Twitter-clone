{"ast":null,"code":"import _slicedToArray from \"/Users/maksim/Desktop/twitter-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/maksim/Desktop/twitter-clone/src/components/Sidebar/components/groupsBtn/Button.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport styles from './button.module.css';\nexport var Button = /*#__PURE__*/React.memo(_c = _s(function (_ref) {\n  _s();\n\n  var onClick = _ref.onClick;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      buttonFollow = _useState2[0],\n      setButtonFollow = _useState2[1];\n\n  var onClickHandler = useCallback(function () {\n    setButtonFollow(function (previousState) {\n      return !previousState;\n    });\n\n    if (onClick) {\n      onClick(buttonFollow);\n    }\n  }, [buttonFollow, onClick]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: buttonFollow ? styles.groupsBtnActive : styles.groupsBtn,\n      onClick: onClickHandler,\n      children: buttonFollow ? 'Subs...' : 'Follow'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n}, \"dQDuAVbQb9JcN8zCtPVQGNQUiKg=\"));\n_c2 = Button;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Button$React.memo\");\n$RefreshReg$(_c2, \"Button\");","map":{"version":3,"sources":["/Users/maksim/Desktop/twitter-clone/src/components/Sidebar/components/groupsBtn/Button.tsx"],"names":["React","useState","useCallback","styles","Button","memo","onClick","buttonFollow","setButtonFollow","onClickHandler","previousState","groupsBtnActive","groupsBtn"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA8BC,WAA9B,QAAiD,OAAjD;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AAMA,OAAO,IAAMC,MAAqB,gBAAGJ,KAAK,CAACK,IAAN,SAAW,gBAAiB;AAAA;;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAAA,kBACvBL,QAAQ,CAAC,KAAD,CADe;AAAA;AAAA,MACxDM,YADwD;AAAA,MAC1CC,eAD0C;;AAG/D,MAAMC,cAAc,GAAGP,WAAW,CAAC,YAAM;AACvCM,IAAAA,eAAe,CAAC,UAACE,aAAD;AAAA,aAAmB,CAACA,aAApB;AAAA,KAAD,CAAf;;AAEA,QAAIJ,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAACC,YAAD,CAAP;AACD;AACF,GANiC,EAM/B,CAACA,YAAD,EAAeD,OAAf,CAN+B,CAAlC;AAQA,sBACE;AAAA,2BACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAEC,YAAY,GAAGJ,MAAM,CAACQ,eAAV,GAA4BR,MAAM,CAACS,SAF5D;AAGE,MAAA,OAAO,EAAEH,cAHX;AAAA,gBAKGF,YAAY,GAAG,SAAH,GAAe;AAL9B;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAWD,CAtBoC,kCAA9B;MAAMH,M","sourcesContent":["import React, { useState, FC, useCallback } from 'react'\n\nimport styles from './button.module.css'\n\ntype ClickType = {\n  onClick?: (isFlag: boolean) => void\n}\n\nexport const Button: FC<ClickType> = React.memo(({ onClick }) => {\n  const [buttonFollow, setButtonFollow] = useState(false)\n\n  const onClickHandler = useCallback(() => {\n    setButtonFollow((previousState) => !previousState)\n\n    if (onClick) {\n      onClick(buttonFollow)\n    }\n  }, [buttonFollow, onClick])\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        className={buttonFollow ? styles.groupsBtnActive : styles.groupsBtn}\n        onClick={onClickHandler}\n      >\n        {buttonFollow ? 'Subs...' : 'Follow'}\n      </button>\n    </>\n  )\n})\n"]},"metadata":{},"sourceType":"module"}