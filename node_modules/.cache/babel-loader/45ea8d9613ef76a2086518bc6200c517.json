{"ast":null,"code":"import _slicedToArray from \"/Users/maksim/Desktop/twitter-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/maksim/Desktop/twitter-clone/src/components/Nav/components/button/Button.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { Suspense, lazy, useState } from 'react';\nimport styles from './button.module.css';\nvar PopupTweet = /*#__PURE__*/lazy(_c = function _c() {\n  return import('../../../PopupTweet/PopupTweet');\n});\n_c2 = PopupTweet;\n\nvar suspensePopupTweet = function suspensePopupTweet(SetPostNews) {\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 23\n    }, _this),\n    children: /*#__PURE__*/_jsxDEV(PopupTweet, {\n      SetPostNews: SetPostNews\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }, _this);\n};\n\nexport var Button = /*#__PURE__*/React.memo(_c3 = _s(function (_ref) {\n  _s();\n\n  var SetPostNews = _ref.SetPostNews;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      add = _useState2[0],\n      setAdd = _useState2[1];\n\n  var onChange = function onChange() {\n    setAdd(function (prev) {\n      return !prev;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.btnFont,\n      \"data-testid\": \"testBtn\",\n      onChange: onChange,\n      children: \"Tweet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, _this), add ? suspensePopupTweet(SetPostNews) : null]\n  }, void 0, true);\n}, \"tE1u/8570gHEA1e2aFrh+vowfzo=\"));\n_c4 = Button;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"PopupTweet$lazy\");\n$RefreshReg$(_c2, \"PopupTweet\");\n$RefreshReg$(_c3, \"Button$React.memo\");\n$RefreshReg$(_c4, \"Button\");","map":{"version":3,"sources":["/Users/maksim/Desktop/twitter-clone/src/components/Nav/components/button/Button.tsx"],"names":["React","Suspense","lazy","useState","styles","PopupTweet","suspensePopupTweet","SetPostNews","Button","memo","add","setAdd","onChange","prev","btnFont"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,EAA8BC,IAA9B,EAAoCC,QAApC,QAAoD,OAApD;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAGA,IAAMC,UAAU,gBAAGH,IAAI,MAAC;AAAA,SAAM,OAAO,gCAAP,CAAN;AAAA,CAAD,CAAvB;MAAMG,U;;AAMN,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,WAAD;AAAA,sBACzB,QAAC,QAAD;AAAU,IAAA,QAAQ,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAApB;AAAA,2BACE,QAAC,UAAD;AAAY,MAAA,WAAW,EAAEA;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADyB;AAAA,CAA3B;;AAMA,OAAO,IAAMC,MAAiB,gBAAGR,KAAK,CAACS,IAAN,UAAW,gBAAqB;AAAA;;AAAA,MAAlBF,WAAkB,QAAlBA,WAAkB;;AAAA,kBACzCJ,QAAQ,CAAC,IAAD,CADiC;AAAA;AAAA,MACxDO,GADwD;AAAA,MACnDC,MADmD;;AAG/D,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBD,IAAAA,MAAM,CAAC,UAACE,IAAD;AAAA,aAAU,CAACA,IAAX;AAAA,KAAD,CAAN;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAET,MAAM,CAACU,OAA1B;AAAmC,qBAAY,SAA/C;AAAyD,MAAA,QAAQ,EAAEF,QAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAIGF,GAAG,GAAGJ,kBAAkB,CAACC,WAAD,CAArB,GAAqC,IAJ3C;AAAA,kBADF;AAWD,CAlBgC,kCAA1B;MAAMC,M","sourcesContent":["import React, { FC, Suspense, lazy, useState } from 'react'\nimport styles from './button.module.css'\nimport { Link, Route } from 'react-router-dom'\n\nconst PopupTweet = lazy(() => import('../../../PopupTweet/PopupTweet'))\n\ntype props = {\n  SetPostNews: any\n}\n\nconst suspensePopupTweet = (SetPostNews: any) => (\n  <Suspense fallback={<div>Loading...</div>}>\n    <PopupTweet SetPostNews={SetPostNews} />\n  </Suspense>\n)\n\nexport const Button: FC<props> = React.memo(({ SetPostNews }) => {\n  const [add, setAdd] = useState(true)\n\n  const onChange = () => {\n    setAdd((prev) => !prev)\n  }\n\n  return (\n    <>\n      <button className={styles.btnFont} data-testid=\"testBtn\" onChange={onChange}>\n        Tweet\n      </button>\n      {add ? suspensePopupTweet(SetPostNews) : null}\n      {/* <Suspense fallback={<div>Loading...</div>}> */}\n      {/* <Route path=\"/popup\" component={() => suspensePopupTweet(SetPostNews)} /> */}\n      {/* </Suspense> */}\n    </>\n  )\n})\n"]},"metadata":{},"sourceType":"module"}