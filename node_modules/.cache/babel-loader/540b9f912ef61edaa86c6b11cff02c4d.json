{"ast":null,"code":"import _slicedToArray from \"/Users/maksim/Desktop/twitter-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/maksim/Desktop/twitter-clone/src/App.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport styles from \"./App.module.css\";\nimport { Nav } from \"./components/Nav/Nav\";\nimport { Content } from \"./components/Content/Content\";\nimport { Sidebar } from \"./components/Sidebar/Sidebar\";\nimport { Bookmarks } from \"./components/Bookmarks/Bookmarks\";\nexport var App = /*#__PURE__*/React.memo(_c = _s(function () {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      postNews = _useState2[0],\n      SetPostNews = _useState2[1];\n\n  var toggle = useCallback(function (id) {\n    SetPostNews(postNews.map(function (post) {\n      if (post.id === id) {\n        post.isFlagLike = !post.isFlagLike;\n      }\n\n      debugger;\n      return post;\n    }));\n  }, [postNews]);\n  console.log(postNews);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: styles.main,\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      SetPostNews: SetPostNews\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.list,\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          component: function component() {\n            return /*#__PURE__*/_jsxDEV(Content, {\n              toggle: toggle,\n              postNews: postNews,\n              SetPostNews: SetPostNews\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, _this);\n          },\n          path: \"/\",\n          exact: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Route, {\n          component: function component() {\n            return /*#__PURE__*/_jsxDEV(Bookmarks, {\n              postNews: postNews,\n              toggle: toggle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 30\n            }, _this);\n          },\n          path: \"/Bookmarks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Route, {\n          component: function component() {\n            return /*#__PURE__*/_jsxDEV(Content, {\n              toggle: toggle,\n              postNews: postNews,\n              SetPostNews: SetPostNews\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, _this);\n          },\n          path: \"/Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, _this);\n}, \"uGcoJ0WFj0nKzZWIucJNoGHcEvw=\"));\n_c2 = App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App$React.memo\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/maksim/Desktop/twitter-clone/src/App.tsx"],"names":["React","useState","useCallback","Route","Switch","styles","Nav","Content","Sidebar","Bookmarks","App","memo","postNews","SetPostNews","toggle","id","map","post","isFlagLike","console","log","main","list"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,SAASC,GAAT,QAAoB,sBAApB;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,SAASC,SAAT,QAA0B,kCAA1B;AAQA,OAAO,IAAMC,GAAO,gBAAGV,KAAK,CAACW,IAAN,SAAW,YAAM;AAAA;;AAAA,kBACNV,QAAQ,CAAc,EAAd,CADF;AAAA;AAAA,MAC/BW,QAD+B;AAAA,MACrBC,WADqB;;AAGtC,MAAMC,MAAM,GAAGZ,WAAW,CACxB,UAACa,EAAD,EAAgB;AACdF,IAAAA,WAAW,CACTD,QAAQ,CAACI,GAAT,CAAa,UAACC,IAAD,EAAU;AACrB,UAAIA,IAAI,CAACF,EAAL,KAAYA,EAAhB,EAAoB;AAClBE,QAAAA,IAAI,CAACC,UAAL,GAAkB,CAACD,IAAI,CAACC,UAAxB;AACD;;AACD;AACA,aAAOD,IAAP;AACD,KAND,CADS,CAAX;AASD,GAXuB,EAYxB,CAACL,QAAD,CAZwB,CAA1B;AAeAO,EAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AAEA,sBACE;AAAM,IAAA,SAAS,EAAEP,MAAM,CAACgB,IAAxB;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,WAAW,EAAER;AAAlB;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAS,MAAA,SAAS,EAAER,MAAM,CAACiB,IAA3B;AAAA,6BACE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,SAAS,EAAE;AAAA,gCACT,QAAC,OAAD;AAAS,cAAA,MAAM,EAAER,MAAjB;AAAyB,cAAA,QAAQ,EAAEF,QAAnC;AAA6C,cAAA,WAAW,EAAEC;AAA1D;AAAA;AAAA;AAAA;AAAA,qBADS;AAAA,WADb;AAIE,UAAA,IAAI,EAAC,GAJP;AAKE,UAAA,KAAK;AALP;AAAA;AAAA;AAAA;AAAA,iBADF,eAQE,QAAC,KAAD;AACE,UAAA,SAAS,EAAE;AAAA,gCAAM,QAAC,SAAD;AAAW,cAAA,QAAQ,EAAED,QAArB;AAA+B,cAAA,MAAM,EAAEE;AAAvC;AAAA;AAAA;AAAA;AAAA,qBAAN;AAAA,WADb;AAEE,UAAA,IAAI,EAAC;AAFP;AAAA;AAAA;AAAA;AAAA,iBARF,eAYE,QAAC,KAAD;AACE,UAAA,SAAS,EAAE;AAAA,gCACT,QAAC,OAAD;AAAS,cAAA,MAAM,EAAEA,MAAjB;AAAyB,cAAA,QAAQ,EAAEF,QAAnC;AAA6C,cAAA,WAAW,EAAEC;AAA1D;AAAA;AAAA;AAAA;AAAA,qBADS;AAAA,WADb;AAIE,UAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,iBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAFF,eAuBE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,aAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AA2BD,CA/CsB,kCAAhB;MAAMH,G","sourcesContent":["import React, { FC, useState, useCallback } from \"react\"\nimport { Route, Switch } from \"react-router-dom\"\n\nimport styles from \"./App.module.css\"\n\nimport { Nav } from \"./components/Nav/Nav\"\nimport { Content } from \"./components/Content/Content\"\nimport { Sidebar } from \"./components/Sidebar/Sidebar\"\nimport { Bookmarks } from \"./components/Bookmarks/Bookmarks\"\n\nexport type postProps = {\n  value: string\n  id: number\n  isFlagLike: boolean\n}\n\nexport const App: FC = React.memo(() => {\n  const [postNews, SetPostNews] = useState<postProps[]>([])\n\n  const toggle = useCallback(\n    (id: number) => {\n      SetPostNews(\n        postNews.map((post) => {\n          if (post.id === id) {\n            post.isFlagLike = !post.isFlagLike\n          }\n          debugger\n          return post\n        })\n      )\n    },\n    [postNews]\n  )\n\n  console.log(postNews)\n\n  return (\n    <main className={styles.main}>\n      <Nav SetPostNews={SetPostNews} />\n      <section className={styles.list}>\n        <Switch>\n          <Route\n            component={() => (\n              <Content toggle={toggle} postNews={postNews} SetPostNews={SetPostNews} />\n            )}\n            path=\"/\"\n            exact\n          />\n          <Route\n            component={() => <Bookmarks postNews={postNews} toggle={toggle} />}\n            path=\"/Bookmarks\"\n          />\n          <Route\n            component={() => (\n              <Content toggle={toggle} postNews={postNews} SetPostNews={SetPostNews} />\n            )}\n            path=\"/Profile\"\n          />\n        </Switch>\n      </section>\n      <Sidebar />\n    </main>\n  )\n})\n"]},"metadata":{},"sourceType":"module"}