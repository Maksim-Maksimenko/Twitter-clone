{"ast":null,"code":"import _slicedToArray from \"/Users/maksim/Desktop/twitter-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/maksim/Desktop/twitter-clone/src/components/Nav/components/menuItems/MenuItems.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport { BrowserRouter as Router, Link, Switch } from 'react-router-dom';\nimport { Item } from './components/Item/Item';\nimport dataNav from '../../data-nav';\nimport logo from \"../../../../images/svg/logo.svg\";\nimport styles from './menuItems.module.css';\nexport var MenuItems = /*#__PURE__*/React.memo(_c = _s(function (_ref) {\n  _s();\n\n  var handleClickSpy = _ref.handleClickSpy;\n\n  var _useState = useState('Profile'),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeElement = _useState2[0],\n      setActiveElement = _useState2[1];\n\n  var handleClick = useCallback(function (e) {\n    var title = e.currentTarget.innerHTML;\n    setActiveElement(title);\n\n    if (handleClickSpy) {\n      handleClickSpy(activeElement);\n    }\n  }, [activeElement, handleClickSpy]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: '/',\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: logo,\n                alt: \"logo\",\n                className: styles.menuLogo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 31\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, _this), dataNav.map(function (el) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: styles.menuItem,\n              children: /*#__PURE__*/_jsxDEV(Item, {\n                icon: el.icon,\n                title: el.title,\n                onClickHandler: handleClick,\n                isActive: el.title === activeElement\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 17\n              }, _this)\n            }, el.title, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, _this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n}, \"lCukPFRNrmH3N6wn7ugrFccYLIM=\"));\n_c2 = MenuItems;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MenuItems$React.memo\");\n$RefreshReg$(_c2, \"MenuItems\");","map":{"version":3,"sources":["/Users/maksim/Desktop/twitter-clone/src/components/Nav/components/menuItems/MenuItems.tsx"],"names":["React","useState","useCallback","BrowserRouter","Router","Link","Switch","Item","dataNav","styles","MenuItems","memo","handleClickSpy","activeElement","setActiveElement","handleClick","e","title","currentTarget","innerHTML","logo","menuLogo","map","el","menuItem","icon"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAAiD,OAAjD;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,IAAlC,EAA+CC,MAA/C,QAA6D,kBAA7D;AACA,SAASC,IAAT,QAAqB,wBAArB;AAEA,OAAOC,OAAP,MAAoB,gBAApB;;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AAQA,OAAO,IAAMC,SAAyB,gBAAGV,KAAK,CAACW,IAAN,SAAW,gBAAwB;AAAA;;AAAA,MAArBC,cAAqB,QAArBA,cAAqB;;AAAA,kBAChCX,QAAQ,CAAC,SAAD,CADwB;AAAA;AAAA,MACnEY,aADmE;AAAA,MACpDC,gBADoD;;AAG1E,MAAMC,WAAW,GAAGb,WAAW,CAC7B,UAACc,CAAD,EAAyB;AACvB,QAAMC,KAAa,GAAGD,CAAC,CAACE,aAAF,CAAgBC,SAAtC;AACAL,IAAAA,gBAAgB,CAACG,KAAD,CAAhB;;AAEA,QAAIL,cAAJ,EAAoB;AAClBA,MAAAA,cAAc,CAACC,aAAD,CAAd;AACD;AACF,GAR4B,EAS7B,CAACA,aAAD,EAAgBD,cAAhB,CAT6B,CAA/B;AAWA,sBACE;AAAA,2BACE,QAAC,MAAD;AAAA,6BACE,QAAC,MAAD;AAAA,+BACE;AAAA,kCACE;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,EAAE,EAAE,GAAV;AAAA,qCAAgB;AAAK,gBAAA,GAAG,EAAEQ,IAAV;AAAgB,gBAAA,GAAG,EAAC,MAApB;AAA2B,gBAAA,SAAS,EAAEX,MAAM,CAACY;AAA7C;AAAA;AAAA;AAAA;AAAA;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBADF,EAIGb,OAAO,CAACc,GAAR,CAAY,UAACC,EAAD;AAAA,gCACX;AAAmB,cAAA,SAAS,EAAEd,MAAM,CAACe,QAArC;AAAA,qCACE,QAAC,IAAD;AACE,gBAAA,IAAI,EAAED,EAAE,CAACE,IADX;AAEE,gBAAA,KAAK,EAAEF,EAAE,CAACN,KAFZ;AAGE,gBAAA,cAAc,EAAEF,WAHlB;AAIE,gBAAA,QAAQ,EAAEQ,EAAE,CAACN,KAAH,KAAaJ;AAJzB;AAAA;AAAA;AAAA;AAAA;AADF,eAASU,EAAE,CAACN,KAAZ;AAAA;AAAA;AAAA;AAAA,qBADW;AAAA,WAAZ,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAuBD,CArCwC,kCAAlC;MAAMP,S","sourcesContent":["import React, { useState, useCallback, FC } from 'react'\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom'\nimport { Item } from './components/Item/Item'\n\nimport dataNav from '../../data-nav'\nimport logo from '../../../../images/svg/logo.svg'\nimport styles from './menuItems.module.css'\n\nimport { Bookmarks } from '../../../Bookmarks/Bookmarks'\n\ntype PropsClick = {\n  handleClickSpy?: (title: string) => void | string\n}\n\nexport const MenuItems: FC<PropsClick> = React.memo(({ handleClickSpy }) => {\n  const [activeElement, setActiveElement] = useState('Profile')\n\n  const handleClick = useCallback(\n    (e: React.MouseEvent) => {\n      const title: string = e.currentTarget.innerHTML\n      setActiveElement(title)\n\n      if (handleClickSpy) {\n        handleClickSpy(activeElement)\n      }\n    },\n    [activeElement, handleClickSpy]\n  )\n  return (\n    <>\n      <Router>\n        <Switch>\n          <ul>\n            <li>\n              <Link to={'/'}>{<img src={logo} alt=\"logo\" className={styles.menuLogo} />}</Link>\n            </li>\n            {dataNav.map((el) => (\n              <li key={el.title} className={styles.menuItem}>\n                <Item\n                  icon={el.icon}\n                  title={el.title}\n                  onClickHandler={handleClick}\n                  isActive={el.title === activeElement}\n                />\n              </li>\n            ))}\n          </ul>\n        </Switch>\n      </Router>\n    </>\n  )\n})\n"]},"metadata":{},"sourceType":"module"}