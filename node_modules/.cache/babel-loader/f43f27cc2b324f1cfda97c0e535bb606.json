{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/maksim/Desktop/twitter-clone/src/components/Sidebar/components/groupsItems/components/GroupItem.tsx\",\n    _this = this;\n\nimport React from \"react\";\nimport styles from \"./groupItem.module.css\";\nexport var GroupItem = /*#__PURE__*/React.memo(_c = function _c(_ref) {\n  var title = _ref.title,\n      confirmation = _ref.confirmation,\n      description = _ref.description,\n      images = _ref.images,\n      promotedIcon = _ref.promotedIcon,\n      promoted = _ref.promoted;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: styles.titleImages,\n      src: images,\n      alt: images\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.groupsName,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [title, confirmation ? /*#__PURE__*/_jsxDEV(\"img\", {\n            className: styles.confirmation,\n            src: confirmation,\n            alt: confirmation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 17\n          }, _this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [promoted ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: promotedIcon,\n          alt: promotedIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, _this) : \"\", promoted]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n});\n_c2 = GroupItem;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GroupItem$React.memo\");\n$RefreshReg$(_c2, \"GroupItem\");","map":{"version":3,"sources":["/Users/maksim/Desktop/twitter-clone/src/components/Sidebar/components/groupsItems/components/GroupItem.tsx"],"names":["React","styles","GroupItem","memo","title","confirmation","description","images","promotedIcon","promoted","titleImages","groupsName"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AAWA,OAAO,IAAMC,SAAkC,gBAAGF,KAAK,CAACG,IAAN,MAChD,kBAA0E;AAAA,MAAvEC,KAAuE,QAAvEA,KAAuE;AAAA,MAAhEC,YAAgE,QAAhEA,YAAgE;AAAA,MAAlDC,WAAkD,QAAlDA,WAAkD;AAAA,MAArCC,MAAqC,QAArCA,MAAqC;AAAA,MAA7BC,YAA6B,QAA7BA,YAA6B;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACxE,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAER,MAAM,CAACS,WAAvB;AAAoC,MAAA,GAAG,EAAEH,MAAzC;AAAiD,MAAA,GAAG,EAAEA;AAAtD;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEN,MAAM,CAACU,UAAvB;AAAA,gCACE;AAAA,qBACGP,KADH,EAEGC,YAAY,gBACX;AAAK,YAAA,SAAS,EAAEJ,MAAM,CAACI,YAAvB;AAAqC,YAAA,GAAG,EAAEA,YAA1C;AAAwD,YAAA,GAAG,EAAEA;AAA7D;AAAA;AAAA;AAAA;AAAA,mBADW,GAGX,EALJ;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eASE;AAAA,oBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,iBATF;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAYE;AAAA,mBACGG,QAAQ,gBAAG;AAAK,UAAA,GAAG,EAAED,YAAV;AAAwB,UAAA,GAAG,EAAEA;AAA7B;AAAA;AAAA;AAAA;AAAA,iBAAH,GAAmD,EAD9D,EAEGC,QAFH;AAAA;AAAA;AAAA;AAAA;AAAA,eAZF;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA,kBADF;AAsBD,CAxB+C,CAA3C;MAAMP,S","sourcesContent":["import React, { FC } from \"react\"\n\nimport styles from \"./groupItem.module.css\"\n\ntype GroupsItemPropsType = {\n  title: string\n  confirmation?: string\n  description: string\n  images: string\n  promotedIcon?: string\n  promoted?: string\n}\n\nexport const GroupItem: FC<GroupsItemPropsType> = React.memo(\n  ({ title, confirmation, description, images, promotedIcon, promoted }) => {\n    return (\n      <>\n        <img className={styles.titleImages} src={images} alt={images} />\n        <div>\n          <div className={styles.groupsName}>\n            <h3>\n              {title}\n              {confirmation ? (\n                <img className={styles.confirmation} src={confirmation} alt={confirmation} />\n              ) : (\n                \"\"\n              )}\n            </h3>\n            <p>{description}</p>\n          </div>\n          <p>\n            {promoted ? <img src={promotedIcon} alt={promotedIcon} /> : \"\"}\n            {promoted}\n          </p>\n        </div>\n      </>\n    )\n  }\n)\n"]},"metadata":{},"sourceType":"module"}