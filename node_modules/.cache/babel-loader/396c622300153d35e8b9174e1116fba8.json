{"ast":null,"code":"import _objectSpread from \"/Users/maksim/Desktop/twitter-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/Users/maksim/Desktop/twitter-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/maksim/Desktop/twitter-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/maksim/Desktop/twitter-clone/src/components/Content/Content.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Profile } from \"./Profile/Profile\";\nimport { Bookmarks } from \"./Bookmarks/Bookmarks\";\nexport var Content = function Content() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      postNews = _useState2[0],\n      SetPostNews = _useState2[1]; // useEffect(() => {\n  //   const saved = JSON.parse(localStorage.getItem(\"post\") || \"[]\") as postProps[]\n  //   SetPostNews(saved)\n  // }, [])\n  // useEffect(() => {\n  //   localStorage.setItem(\"post\", JSON.stringify(postNews))\n  // }, [postNews])\n\n\n  var addPost = useCallback(function (value) {\n    var newPost = {\n      value: value,\n      isFlagLike: false,\n      id: Date.now()\n    };\n    SetPostNews(function (prev) {\n      return [newPost].concat(_toConsumableArray(prev));\n    });\n  }, []);\n  var toggle = useCallback(function (id) {\n    SetPostNews(function (prev) {\n      return prev.map(function (post) {\n        return _objectSpread(_objectSpread({}, post), {}, {\n          isFlagLike: post.id === id ? !post.isFlagLike : post.isFlagLike\n        });\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        component: function component() {\n          return /*#__PURE__*/_jsxDEV(Profile, {\n            postNews: postNews,\n            toggle: toggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 42\n          }, _this);\n        },\n        exact: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/Profile\",\n        component: function component() {\n          return /*#__PURE__*/_jsxDEV(Profile, {\n            postNews: postNews,\n            toggle: toggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 28\n          }, _this);\n        },\n        exact: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/Bookmarks\",\n        component: function component() {\n          return /*#__PURE__*/_jsxDEV(Bookmarks, {\n            postNews: postNews,\n            toggle: toggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 28\n          }, _this);\n        },\n        exact: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(Content, \"TCR8ADxvxc5wFesydw6vN6p+Rrc=\");\n\n_c = Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["/Users/maksim/Desktop/twitter-clone/src/components/Content/Content.tsx"],"names":["React","useState","useCallback","Route","Switch","Profile","Bookmarks","Content","postNews","SetPostNews","addPost","value","newPost","isFlagLike","id","Date","now","prev","toggle","map","post"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,EAA8BC,WAA9B,QAA4D,OAA5D;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,SAAT,QAA0B,uBAA1B;AAQA,OAAO,IAAMC,OAAW,GAAG,SAAdA,OAAc,GAAM;AAAA;;AAAA,kBACCN,QAAQ,CAAc,EAAd,CADT;AAAA;AAAA,MACxBO,QADwB;AAAA,MACdC,WADc,kBAG/B;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA,MAAMC,OAAO,GAAGR,WAAW,CAAC,UAACS,KAAD,EAAmB;AAC7C,QAAMC,OAAkB,GAAG;AACzBD,MAAAA,KAAK,EAAEA,KADkB;AAEzBE,MAAAA,UAAU,EAAE,KAFa;AAGzBC,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL;AAHqB,KAA3B;AAMAP,IAAAA,WAAW,CAAC,UAACQ,IAAD;AAAA,cAAWL,OAAX,4BAAuBK,IAAvB;AAAA,KAAD,CAAX;AACD,GAR0B,EAQxB,EARwB,CAA3B;AAUA,MAAMC,MAAM,GAAGhB,WAAW,CAAC,UAACY,EAAD,EAAgB;AACzCL,IAAAA,WAAW,CAAC,UAACQ,IAAD;AAAA,aACVA,IAAI,CAACE,GAAL,CAAS,UAACC,IAAD,EAAU;AACjB,+CAAYA,IAAZ;AAAkBP,UAAAA,UAAU,EAAEO,IAAI,CAACN,EAAL,KAAYA,EAAZ,GAAiB,CAACM,IAAI,CAACP,UAAvB,GAAoCO,IAAI,CAACP;AAAvE;AACD,OAFD,CADU;AAAA,KAAD,CAAX;AAKD,GANyB,EAMvB,EANuB,CAA1B;AAQA,sBACE;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,SAAS,EAAE;AAAA,8BAAM,QAAC,OAAD;AAAS,YAAA,QAAQ,EAAEL,QAAnB;AAA6B,YAAA,MAAM,EAAEU;AAArC;AAAA;AAAA;AAAA;AAAA,mBAAN;AAAA,SAA3B;AAAkF,QAAA,KAAK;AAAvF;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,SAAS,EAAE;AAAA,8BAAM,QAAC,OAAD;AAAS,YAAA,QAAQ,EAAEV,QAAnB;AAA6B,YAAA,MAAM,EAAEU;AAArC;AAAA;AAAA;AAAA;AAAA,mBAAN;AAAA,SAFb;AAGE,QAAA,KAAK;AAHP;AAAA;AAAA;AAAA;AAAA,eAFF,eAOE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,YADP;AAEE,QAAA,SAAS,EAAE;AAAA,8BAAM,QAAC,SAAD;AAAW,YAAA,QAAQ,EAAEV,QAArB;AAA+B,YAAA,MAAM,EAAEU;AAAvC;AAAA;AAAA;AAAA;AAAA,mBAAN;AAAA,SAFb;AAGE,QAAA,KAAK;AAHP;AAAA;AAAA;AAAA;AAAA,eAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAiBD,CA/CM;;GAAMX,O;;KAAAA,O","sourcesContent":["import React, { FC, useState, useCallback, useEffect } from \"react\"\nimport { Route, Switch } from \"react-router-dom\"\nimport { Profile } from \"./Profile/Profile\"\nimport { Bookmarks } from \"./Bookmarks/Bookmarks\"\n\nexport type postProps = {\n  value: string\n  id: number\n  isFlagLike: boolean\n}\n\nexport const Content: FC = () => {\n  const [postNews, SetPostNews] = useState<postProps[]>([])\n\n  // useEffect(() => {\n  //   const saved = JSON.parse(localStorage.getItem(\"post\") || \"[]\") as postProps[]\n  //   SetPostNews(saved)\n  // }, [])\n\n  // useEffect(() => {\n  //   localStorage.setItem(\"post\", JSON.stringify(postNews))\n  // }, [postNews])\n\n  const addPost = useCallback((value: string) => {\n    const newPost: postProps = {\n      value: value,\n      isFlagLike: false,\n      id: Date.now()\n    }\n\n    SetPostNews((prev) => [newPost, ...prev])\n  }, [])\n\n  const toggle = useCallback((id: number) => {\n    SetPostNews((prev) =>\n      prev.map((post) => {\n        return { ...post, isFlagLike: post.id === id ? !post.isFlagLike : post.isFlagLike }\n      })\n    )\n  }, [])\n\n  return (\n    <>\n      <Switch>\n        <Route path=\"/\" component={() => <Profile postNews={postNews} toggle={toggle} />} exact />\n        <Route\n          path=\"/Profile\"\n          component={() => <Profile postNews={postNews} toggle={toggle} />}\n          exact\n        />\n        <Route\n          path=\"/Bookmarks\"\n          component={() => <Bookmarks postNews={postNews} toggle={toggle} />}\n          exact\n        />\n      </Switch>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}