{"ast":null,"code":"import _slicedToArray from \"/Users/maksim/Desktop/twitter-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/maksim/Desktop/twitter-clone/src/components/Nav/components/menuItems/MenuItems.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport { Link, Switch } from \"react-router-dom\";\nimport { Item } from \"./components/Item/Item\";\nimport dataNav from \"../../data-nav\";\nimport logo from \"../../../../images/svg/logo.svg\";\nimport styles from \"./menuItems.module.css\";\nexport var MenuItems = /*#__PURE__*/React.memo(_c = _s(function (_ref) {\n  _s();\n\n  var handleClickSpy = _ref.handleClickSpy;\n\n  var _useState = useState(\"Profile\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeElement = _useState2[0],\n      setActiveElement = _useState2[1];\n\n  var handleClick = useCallback(function (e) {\n    var title = e.currentTarget.innerHTML;\n    setActiveElement(title); // if (handleClickSpy) {\n    //   handleClickSpy(activeElement)\n    // }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            alt: \"logo\",\n            className: styles.menuLogo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, _this)\n      }, \"test\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, _this), dataNav.map(function (el) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: styles.menuItem,\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: /*#__PURE__*/_jsxDEV(Item, {\n              icon: el.icon,\n              title: el.title,\n              onClickHandler: handleClick,\n              isActive: el.title === activeElement\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, _this)\n        }, el.icon, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, _this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false);\n}, \"42Y80+0mO+oA2sAtf8h7wNmcz5Q=\"), function (prevPost, nextPost) {\n  console.log(prevPost, nextPost);\n  return prevPost.isActive === nextPost.isActive;\n});\n_c2 = MenuItems;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MenuItems$React.memo\");\n$RefreshReg$(_c2, \"MenuItems\");","map":{"version":3,"sources":["/Users/maksim/Desktop/twitter-clone/src/components/Nav/components/menuItems/MenuItems.tsx"],"names":["React","useState","useCallback","Link","Switch","Item","dataNav","styles","MenuItems","memo","handleClickSpy","activeElement","setActiveElement","handleClick","e","title","currentTarget","innerHTML","logo","menuLogo","map","el","menuItem","icon","prevPost","nextPost","console","log","isActive"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAAiD,OAAjD;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,kBAA7B;AACA,SAASC,IAAT,QAAqB,wBAArB;AAEA,OAAOC,OAAP,MAAoB,gBAApB;;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AAMA,OAAO,IAAMC,SAAyB,gBAAGR,KAAK,CAACS,IAAN,SACvC,gBAAwB;AAAA;;AAAA,MAArBC,cAAqB,QAArBA,cAAqB;;AAAA,kBACoBT,QAAQ,CAAC,SAAD,CAD5B;AAAA;AAAA,MACfU,aADe;AAAA,MACAC,gBADA;;AAGtB,MAAMC,WAAW,GAAGX,WAAW,CAAC,UAACY,CAAD,EAAyB;AACvD,QAAMC,KAAa,GAAGD,CAAC,CAACE,aAAF,CAAgBC,SAAtC;AACAL,IAAAA,gBAAgB,CAACG,KAAD,CAAhB,CAFuD,CAIvD;AACA;AACA;AACD,GAP8B,EAO5B,EAP4B,CAA/B;AASA,sBACE;AAAA,2BACE;AAAA,8BACE;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAE,GAAV;AAAA,iCAAgB;AAAK,YAAA,GAAG,EAAEG,IAAV;AAAgB,YAAA,GAAG,EAAC,MAApB;AAA2B,YAAA,SAAS,EAAEX,MAAM,CAACY;AAA7C;AAAA;AAAA;AAAA;AAAA;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF,SAAS,MAAT;AAAA;AAAA;AAAA;AAAA,eADF,EAIGb,OAAO,CAACc,GAAR,CAAY,UAACC,EAAD;AAAA,4BACX;AAAkB,UAAA,SAAS,EAAEd,MAAM,CAACe,QAApC;AAAA,iCACE,QAAC,MAAD;AAAA,mCACE,QAAC,IAAD;AACE,cAAA,IAAI,EAAED,EAAE,CAACE,IADX;AAEE,cAAA,KAAK,EAAEF,EAAE,CAACN,KAFZ;AAGE,cAAA,cAAc,EAAEF,WAHlB;AAIE,cAAA,QAAQ,EAAEQ,EAAE,CAACN,KAAH,KAAaJ;AAJzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,WAASU,EAAE,CAACE,IAAZ;AAAA;AAAA;AAAA;AAAA,iBADW;AAAA,OAAZ,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAqBD,CAlCsC,mCAmCvC,UAACC,QAAD,EAAWC,QAAX,EAAwB;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAsBC,QAAtB;AACA,SAAOD,QAAQ,CAACI,QAAT,KAAsBH,QAAQ,CAACG,QAAtC;AACD,CAtCsC,CAAlC;MAAMpB,S","sourcesContent":["import React, { useState, useCallback, FC } from \"react\"\nimport { Link, Switch } from \"react-router-dom\"\nimport { Item } from \"./components/Item/Item\"\n\nimport dataNav from \"../../data-nav\"\nimport logo from \"../../../../images/svg/logo.svg\"\nimport styles from \"./menuItems.module.css\"\n\ntype PropsClick = {\n  handleClickSpy?: (title: string) => void | string\n}\n\nexport const MenuItems: FC<PropsClick> = React.memo(\n  ({ handleClickSpy }) => {\n    const [activeElement, setActiveElement] = useState(\"Profile\")\n\n    const handleClick = useCallback((e: React.MouseEvent) => {\n      const title: string = e.currentTarget.innerHTML\n      setActiveElement(title)\n\n      // if (handleClickSpy) {\n      //   handleClickSpy(activeElement)\n      // }\n    }, [])\n\n    return (\n      <>\n        <ul>\n          <li key={\"test\"}>\n            <Link to={\"/\"}>{<img src={logo} alt=\"logo\" className={styles.menuLogo} />}</Link>\n          </li>\n          {dataNav.map((el) => (\n            <li key={el.icon} className={styles.menuItem}>\n              <Switch>\n                <Item\n                  icon={el.icon}\n                  title={el.title}\n                  onClickHandler={handleClick}\n                  isActive={el.title === activeElement}\n                />\n              </Switch>\n            </li>\n          ))}\n        </ul>\n      </>\n    )\n  },\n  (prevPost, nextPost) => {\n    console.log(prevPost, nextPost)\n    return prevPost.isActive === nextPost.isActive\n  }\n)\n"]},"metadata":{},"sourceType":"module"}