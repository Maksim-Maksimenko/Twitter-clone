{"ast":null,"code":"import _objectSpread from \"/Users/maksim/Desktop/twitter-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/Users/maksim/Desktop/twitter-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/maksim/Desktop/twitter-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/maksim/Desktop/twitter-clone/src/components/Content/Content.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { Profile } from \"./Profile/Profile\";\nexport var Content = function Content() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      postNews = _useState2[0],\n      SetPostNews = _useState2[1];\n\n  useEffect(function () {\n    var saved = JSON.parse(localStorage.getItem(\"post\") || \"[]\");\n    SetPostNews(saved);\n  }, []);\n  useEffect(function () {\n    localStorage.setItem(\"post\", JSON.stringify(postNews));\n  }, [postNews]);\n  var addPost = useCallback(function (value) {\n    var newPost = {\n      value: value,\n      isFlagLike: false,\n      id: Date.now()\n    };\n    SetPostNews(function (prev) {\n      return [newPost].concat(_toConsumableArray(prev));\n    });\n  }, []);\n  var toggle = useCallback(function (id) {\n    SetPostNews(function (prev) {\n      return prev.map(function (post) {\n        return _objectSpread(_objectSpread({}, post), {}, {\n          isFlagLike: post.id === id ? !post.isFlagLike : post.isFlagLike\n        });\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Route, {\n    path: \"/\",\n    component: function component() {\n      return /*#__PURE__*/_jsxDEV(Profile, {\n        postNews: postNews,\n        toggle: toggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 43\n      }, _this);\n    },\n    exact: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(Content, \"YV9DqMz3iQ4kxg1FWFLVUZ/owro=\");\n\n_c = Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["/Users/maksim/Desktop/twitter-clone/src/components/Content/Content.tsx"],"names":["React","useState","useCallback","useEffect","Profile","Content","postNews","SetPostNews","saved","JSON","parse","localStorage","getItem","setItem","stringify","addPost","value","newPost","isFlagLike","id","Date","now","prev","toggle","map","post"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,EAA8BC,WAA9B,EAA2CC,SAA3C,QAA4D,OAA5D;AACA,SAASC,OAAT,QAAwB,mBAAxB;AAQA,OAAO,IAAMC,OAAW,GAAG,SAAdA,OAAc,GAAM;AAAA;;AAAA,kBACCJ,QAAQ,CAAc,EAAd,CADT;AAAA;AAAA,MACxBK,QADwB;AAAA,MACdC,WADc;;AAG/BJ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMK,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,KAAgC,IAA3C,CAAd;AACAL,IAAAA,WAAW,CAACC,KAAD,CAAX;AACD,GAHQ,EAGN,EAHM,CAAT;AAKAL,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,YAAY,CAACE,OAAb,CAAqB,MAArB,EAA6BJ,IAAI,CAACK,SAAL,CAAeR,QAAf,CAA7B;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIA,MAAMS,OAAO,GAAGb,WAAW,CAAC,UAACc,KAAD,EAAmB;AAC7C,QAAMC,OAAkB,GAAG;AACzBD,MAAAA,KAAK,EAAEA,KADkB;AAEzBE,MAAAA,UAAU,EAAE,KAFa;AAGzBC,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL;AAHqB,KAA3B;AAMAd,IAAAA,WAAW,CAAC,UAACe,IAAD;AAAA,cAAWL,OAAX,4BAAuBK,IAAvB;AAAA,KAAD,CAAX;AACD,GAR0B,EAQxB,EARwB,CAA3B;AAUA,MAAMC,MAAM,GAAGrB,WAAW,CAAC,UAACiB,EAAD,EAAgB;AACzCZ,IAAAA,WAAW,CAAC,UAACe,IAAD;AAAA,aACVA,IAAI,CAACE,GAAL,CAAS,UAACC,IAAD,EAAU;AACjB,+CAAYA,IAAZ;AAAkBP,UAAAA,UAAU,EAAEO,IAAI,CAACN,EAAL,KAAYA,EAAZ,GAAiB,CAACM,IAAI,CAACP,UAAvB,GAAoCO,IAAI,CAACP;AAAvE;AACD,OAFD,CADU;AAAA,KAAD,CAAX;AAKD,GANyB,EAMvB,EANuB,CAA1B;AAQA,sBAAO,QAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,SAAS,EAAE;AAAA,0BAAM,QAAC,OAAD;AAAS,QAAA,QAAQ,EAAEZ,QAAnB;AAA6B,QAAA,MAAM,EAAEiB;AAArC;AAAA;AAAA;AAAA;AAAA,eAAN;AAAA,KAA3B;AAAkF,IAAA,KAAK;AAAvF;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CA/BM;;GAAMlB,O;;KAAAA,O","sourcesContent":["import React, { FC, useState, useCallback, useEffect } from \"react\"\nimport { Profile } from \"./Profile/Profile\"\n\nexport type postProps = {\n  value: string\n  id: number\n  isFlagLike: boolean\n}\n\nexport const Content: FC = () => {\n  const [postNews, SetPostNews] = useState<postProps[]>([])\n\n  useEffect(() => {\n    const saved = JSON.parse(localStorage.getItem(\"post\") || \"[]\") as postProps[]\n    SetPostNews(saved)\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(\"post\", JSON.stringify(postNews))\n  }, [postNews])\n\n  const addPost = useCallback((value: string) => {\n    const newPost: postProps = {\n      value: value,\n      isFlagLike: false,\n      id: Date.now()\n    }\n\n    SetPostNews((prev) => [newPost, ...prev])\n  }, [])\n\n  const toggle = useCallback((id: number) => {\n    SetPostNews((prev) =>\n      prev.map((post) => {\n        return { ...post, isFlagLike: post.id === id ? !post.isFlagLike : post.isFlagLike }\n      })\n    )\n  }, [])\n\n  return <Route path=\"/\" component={() => <Profile postNews={postNews} toggle={toggle} />} exact />\n}\n"]},"metadata":{},"sourceType":"module"}