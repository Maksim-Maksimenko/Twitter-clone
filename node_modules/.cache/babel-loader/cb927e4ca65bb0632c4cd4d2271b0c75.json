{"ast":null,"code":"import _toConsumableArray from \"/Users/maksim/Desktop/twitter-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/maksim/Desktop/twitter-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/maksim/Desktop/twitter-clone/src/components/Content/Content.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Profile } from \"./Profile/Profile\";\nimport { Bookmarks } from \"./Bookmarks/Bookmarks\";\nexport var Content = /*#__PURE__*/React.memo(_c = _s(function () {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      postNews = _useState2[0],\n      SetPostNews = _useState2[1];\n\n  useEffect(function () {\n    var saved = JSON.parse(localStorage.getItem(\"post\") || \"[]\");\n    SetPostNews(saved);\n  }, []);\n  useEffect(function () {\n    localStorage.setItem(\"post\", JSON.stringify(postNews));\n  }, [postNews]);\n  var addPost = useCallback(function (value) {\n    var newPost = {\n      value: value,\n      isFlagLike: false,\n      id: Date.now()\n    };\n    SetPostNews(function (prev) {\n      return [newPost].concat(_toConsumableArray(prev));\n    });\n  }, []);\n  console.log(postNews);\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        component: function component() {\n          return /*#__PURE__*/_jsxDEV(Profile, {\n            postNews: postNews,\n            SetPostNews: SetPostNews\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 28\n          }, _this);\n        },\n        exact: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/Profile\",\n        component: function component() {\n          return /*#__PURE__*/_jsxDEV(Profile, {\n            postNews: postNews,\n            SetPostNews: SetPostNews\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 28\n          }, _this);\n        },\n        exact: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/Bookmarks\",\n        component: function component() {\n          return /*#__PURE__*/_jsxDEV(Bookmarks, {\n            postNews: postNews,\n            SetPostNews: SetPostNews\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 28\n          }, _this);\n        },\n        exact: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, _this);\n}, \"Y+tBXafz36GcIVQqU8OZ3wtVhNY=\"));\n_c2 = Content;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Content$React.memo\");\n$RefreshReg$(_c2, \"Content\");","map":{"version":3,"sources":["/Users/maksim/Desktop/twitter-clone/src/components/Content/Content.tsx"],"names":["React","useState","useCallback","useEffect","Route","Switch","Profile","Bookmarks","Content","memo","postNews","SetPostNews","saved","JSON","parse","localStorage","getItem","setItem","stringify","addPost","value","newPost","isFlagLike","id","Date","now","prev","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,EAA8BC,WAA9B,EAA2CC,SAA3C,QAA4D,OAA5D;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,SAAT,QAA0B,uBAA1B;AAQA,OAAO,IAAMC,OAAW,gBAAGR,KAAK,CAACS,IAAN,SAAW,YAAM;AAAA;;AAAA,kBACVR,QAAQ,CAAc,EAAd,CADE;AAAA;AAAA,MACnCS,QADmC;AAAA,MACzBC,WADyB;;AAG1CR,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMS,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,KAAgC,IAA3C,CAAd;AACAL,IAAAA,WAAW,CAACC,KAAD,CAAX;AACD,GAHQ,EAGN,EAHM,CAAT;AAKAT,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,YAAY,CAACE,OAAb,CAAqB,MAArB,EAA6BJ,IAAI,CAACK,SAAL,CAAeR,QAAf,CAA7B;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIA,MAAMS,OAAO,GAAGjB,WAAW,CAAC,UAACkB,KAAD,EAAmB;AAC7C,QAAMC,OAAkB,GAAG;AACzBD,MAAAA,KAAK,EAAEA,KADkB;AAEzBE,MAAAA,UAAU,EAAE,KAFa;AAGzBC,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL;AAHqB,KAA3B;AAMAd,IAAAA,WAAW,CAAC,UAACe,IAAD;AAAA,cAAWL,OAAX,4BAAuBK,IAAvB;AAAA,KAAD,CAAX;AACD,GAR0B,EAQxB,EARwB,CAA3B;AAUAC,EAAAA,OAAO,CAACC,GAAR,CAAYlB,QAAZ;AAEA,sBACE,QAAC,MAAD;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,GADP;AAEE,QAAA,SAAS,EAAE;AAAA,8BAAM,QAAC,OAAD;AAAS,YAAA,QAAQ,EAAEA,QAAnB;AAA6B,YAAA,WAAW,EAAEC;AAA1C;AAAA;AAAA;AAAA;AAAA,mBAAN;AAAA,SAFb;AAGE,QAAA,KAAK;AAHP;AAAA;AAAA;AAAA;AAAA,eADF,eAME,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,SAAS,EAAE;AAAA,8BAAM,QAAC,OAAD;AAAS,YAAA,QAAQ,EAAED,QAAnB;AAA6B,YAAA,WAAW,EAAEC;AAA1C;AAAA;AAAA;AAAA;AAAA,mBAAN;AAAA,SAFb;AAGE,QAAA,KAAK;AAHP;AAAA;AAAA;AAAA;AAAA,eANF,eAWE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,YADP;AAEE,QAAA,SAAS,EAAE;AAAA,8BAAM,QAAC,SAAD;AAAW,YAAA,QAAQ,EAAED,QAArB;AAA+B,YAAA,WAAW,EAAEC;AAA5C;AAAA;AAAA;AAAA;AAAA,mBAAN;AAAA,SAFb;AAGE,QAAA,KAAK;AAHP;AAAA;AAAA;AAAA;AAAA,eAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAqBD,CA7C0B,kCAApB;MAAMH,O","sourcesContent":["import React, { FC, useState, useCallback, useEffect } from \"react\"\nimport { Route, Switch } from \"react-router-dom\"\nimport { Profile } from \"./Profile/Profile\"\nimport { Bookmarks } from \"./Bookmarks/Bookmarks\"\n\nexport type postProps = {\n  value: string\n  id: number\n  isFlagLike: boolean\n}\n\nexport const Content: FC = React.memo(() => {\n  const [postNews, SetPostNews] = useState<postProps[]>([])\n\n  useEffect(() => {\n    const saved = JSON.parse(localStorage.getItem(\"post\") || \"[]\") as postProps[]\n    SetPostNews(saved)\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(\"post\", JSON.stringify(postNews))\n  }, [postNews])\n\n  const addPost = useCallback((value: string) => {\n    const newPost: postProps = {\n      value: value,\n      isFlagLike: false,\n      id: Date.now()\n    }\n\n    SetPostNews((prev) => [newPost, ...prev])\n  }, [])\n\n  console.log(postNews)\n\n  return (\n    <Switch>\n      <Switch>\n        <Route\n          path=\"/\"\n          component={() => <Profile postNews={postNews} SetPostNews={SetPostNews} />}\n          exact\n        />\n        <Route\n          path=\"/Profile\"\n          component={() => <Profile postNews={postNews} SetPostNews={SetPostNews} />}\n          exact\n        />\n        <Route\n          path=\"/Bookmarks\"\n          component={() => <Bookmarks postNews={postNews} SetPostNews={SetPostNews} />}\n          exact\n        />\n      </Switch>\n    </Switch>\n  )\n})\n"]},"metadata":{},"sourceType":"module"}