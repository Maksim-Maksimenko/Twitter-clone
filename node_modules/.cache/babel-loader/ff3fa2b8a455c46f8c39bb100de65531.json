{"ast":null,"code":"import _toConsumableArray from \"/Users/maksim/Desktop/twitter-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/maksim/Desktop/twitter-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/maksim/Desktop/twitter-clone/src/App.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport styles from \"./App.module.css\";\nimport { Content } from \"./components/Content/Content\";\nimport { Button } from \"./components/Nav/components/button/Button\";\nexport var App = /*#__PURE__*/React.memo(_c = _s(function () {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      postNews = _useState2[0],\n      SetPostNews = _useState2[1];\n\n  var addPost = function addPost(value) {\n    var newPost = {\n      value: value,\n      isFlagLike: false,\n      id: Date.now()\n    };\n    SetPostNews(function (prev) {\n      return [newPost].concat(_toConsumableArray(prev));\n    });\n  };\n\n  var toggle = useCallback(function (id) {\n    SetPostNews(function (prev) {\n      return prev.map(function (post) {\n        if (post.id === id) {\n          post.isFlagLike = !post.isFlagLike;\n        }\n\n        debugger;\n        return post;\n      });\n    });\n  }, []);\n  console.log(postNews);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: styles.main,\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.list,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        SetPostNews: SetPostNews\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          component: function component() {\n            return /*#__PURE__*/_jsxDEV(Content, {\n              toggle: toggle,\n              postNews: postNews\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 35\n            }, _this);\n          },\n          path: \"/\",\n          exact: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Route, {\n          component: function component() {\n            return /*#__PURE__*/_jsxDEV(Content, {\n              toggle: toggle,\n              postNews: postNews\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 30\n            }, _this);\n          },\n          path: \"/Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, _this);\n}, \"uGcoJ0WFj0nKzZWIucJNoGHcEvw=\"));\n_c2 = App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App$React.memo\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/maksim/Desktop/twitter-clone/src/App.tsx"],"names":["React","useState","useCallback","Route","Switch","styles","Content","Button","App","memo","postNews","SetPostNews","addPost","value","newPost","isFlagLike","id","Date","now","prev","toggle","map","post","console","log","main","list"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AAGA,SAASC,OAAT,QAAwB,8BAAxB;AAGA,SAASC,MAAT,QAAuB,2CAAvB;AAQA,OAAO,IAAMC,GAAO,gBAAGR,KAAK,CAACS,IAAN,SAAW,YAAM;AAAA;;AAAA,kBACNR,QAAQ,CAAc,EAAd,CADF;AAAA;AAAA,MAC/BS,QAD+B;AAAA,MACrBC,WADqB;;AAGtC,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAmB;AACjC,QAAMC,OAAkB,GAAG;AACzBD,MAAAA,KAAK,EAAEA,KADkB;AAEzBE,MAAAA,UAAU,EAAE,KAFa;AAGzBC,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL;AAHqB,KAA3B;AAMAP,IAAAA,WAAW,CAAC,UAACQ,IAAD;AAAA,cAAWL,OAAX,4BAAuBK,IAAvB;AAAA,KAAD,CAAX;AACD,GARD;;AAUA,MAAMC,MAAM,GAAGlB,WAAW,CAAC,UAACc,EAAD,EAAgB;AACzCL,IAAAA,WAAW,CAAC,UAACQ,IAAD;AAAA,aACVA,IAAI,CAACE,GAAL,CAAS,UAACC,IAAD,EAAU;AACjB,YAAIA,IAAI,CAACN,EAAL,KAAYA,EAAhB,EAAoB;AAClBM,UAAAA,IAAI,CAACP,UAAL,GAAkB,CAACO,IAAI,CAACP,UAAxB;AACD;;AACD;AACA,eAAOO,IAAP;AACD,OAND,CADU;AAAA,KAAD,CAAX;AASD,GAVyB,EAUvB,EAVuB,CAA1B;AAYAC,EAAAA,OAAO,CAACC,GAAR,CAAYd,QAAZ;AAEA,sBACE;AAAM,IAAA,SAAS,EAAEL,MAAM,CAACoB,IAAxB;AAAA,2BAEE;AAAS,MAAA,SAAS,EAAEpB,MAAM,CAACqB,IAA3B;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,WAAW,EAAEf;AAArB;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,SAAS,EAAE;AAAA,gCAAM,QAAC,OAAD;AAAS,cAAA,MAAM,EAAES,MAAjB;AAAyB,cAAA,QAAQ,EAAEV;AAAnC;AAAA;AAAA;AAAA;AAAA,qBAAN;AAAA,WAAlB;AAAyE,UAAA,IAAI,EAAC,GAA9E;AAAkF,UAAA,KAAK;AAAvF;AAAA;AAAA;AAAA;AAAA,iBADF,eAME,QAAC,KAAD;AACE,UAAA,SAAS,EAAE;AAAA,gCAAM,QAAC,OAAD;AAAS,cAAA,MAAM,EAAEU,MAAjB;AAAyB,cAAA,QAAQ,EAAEV;AAAnC;AAAA;AAAA;AAAA;AAAA,qBAAN;AAAA,WADb;AAEE,UAAA,IAAI,EAAC;AAFP;AAAA;AAAA;AAAA;AAAA,iBANF;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,WADF;AAoBD,CA/CsB,kCAAhB;MAAMF,G","sourcesContent":["import React, { FC, useState, useCallback } from \"react\"\nimport { Route, Switch } from \"react-router-dom\"\n\nimport styles from \"./App.module.css\"\n\nimport { Nav } from \"./components/Nav/Nav\"\nimport { Content } from \"./components/Content/Content\"\nimport { Sidebar } from \"./components/Sidebar/Sidebar\"\nimport { Bookmarks } from \"./components/Bookmarks/Bookmarks\"\nimport { Button } from \"./components/Nav/components/button/Button\"\n\nexport type postProps = {\n  value: string\n  id: number\n  isFlagLike: boolean\n}\n\nexport const App: FC = React.memo(() => {\n  const [postNews, SetPostNews] = useState<postProps[]>([])\n\n  const addPost = (value: string) => {\n    const newPost: postProps = {\n      value: value,\n      isFlagLike: false,\n      id: Date.now()\n    }\n\n    SetPostNews((prev) => [newPost, ...prev])\n  }\n\n  const toggle = useCallback((id: number) => {\n    SetPostNews((prev) =>\n      prev.map((post) => {\n        if (post.id === id) {\n          post.isFlagLike = !post.isFlagLike\n        }\n        debugger\n        return post\n      })\n    )\n  }, [])\n\n  console.log(postNews)\n\n  return (\n    <main className={styles.main}>\n      {/* <Nav SetPostNews={SetPostNews} /> */}\n      <section className={styles.list}>\n        <Button SetPostNews={SetPostNews} />\n        <Switch>\n          <Route component={() => <Content toggle={toggle} postNews={postNews} />} path=\"/\" exact />\n          {/* <Route\n            component={() => <Bookmarks postNews={postNews} toggle={toggle} />}\n            path=\"/Bookmarks\"\n          /> */}\n          <Route\n            component={() => <Content toggle={toggle} postNews={postNews} />}\n            path=\"/Profile\"\n          />\n        </Switch>\n      </section>\n      {/* <Sidebar /> */}\n    </main>\n  )\n})\n"]},"metadata":{},"sourceType":"module"}